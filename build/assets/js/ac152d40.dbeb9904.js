(self.webpackChunknhttp_website_docu=self.webpackChunknhttp_website_docu||[]).push([[15],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},p=Object.keys(t);for(r=0;r<p.length;r++)n=p[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(t);for(r=0;r<p.length;r++)n=p[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,p=t.originalType,c=t.parentName,l=i(t,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||p;return n?r.createElement(f,a(a({ref:e},l),{},{components:n})):r.createElement(f,a({ref:e},l))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var p=n.length,a=new Array(p);a[0]=d;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:o,a[1]=i;for(var u=2;u<p;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5552:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var r=n(2122),o=n(9756),p=(n(7294),n(3905)),a=["components"],i={},c="tRPC",u={unversionedId:"3rd-party-lib/tRPC",id:"3rd-party-lib/tRPC",isDocsHomePage:!1,title:"tRPC",description:"Simple adapter tRPC for nhttp.",source:"@site/docs/3rd-party-lib/tRPC.md",sourceDirName:"3rd-party-lib",slug:"/3rd-party-lib/tRPC",permalink:"/docs/3rd-party-lib/tRPC",editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/3rd-party-lib/tRPC.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Swagger",permalink:"/docs/3rd-party-lib/swagger"},next:{title:"Zod Validator",permalink:"/docs/3rd-party-lib/zod-validator"}},l=[{value:"Import",id:"import",children:[]},{value:"Usage",id:"usage",children:[]}],s={toc:l};function d(t){var e=t.components,n=(0,o.Z)(t,a);return(0,p.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"trpc"},"tRPC"),(0,p.kt)("p",null,"Simple adapter tRPC for nhttp."),(0,p.kt)("h3",{id:"import"},"Import"),(0,p.kt)("h4",{id:"deno"},"Deno"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "https://deno.land/x/nhttp@1.2.7/lib/trpc.ts";\n')),(0,p.kt)("h4",{id:"deno-npm"},"Deno npm"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "npm:nhttp-land@1.2.7/trpc";\n')),(0,p.kt)("h4",{id:"node--bun"},"Node / Bun"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @trpc/server\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "nhttp-land/trpc";\n// or\n// const {...} = require("nhttp-land/trpc");\n')),(0,p.kt)("h3",{id:"usage"},"Usage"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp, { RequestEvent } from "https://deno.land/x/nhttp@1.2.7/mod.ts";\nimport adapter from "https://deno.land/x/nhttp@1.2.7/lib/trpc.ts";\nimport { initTRPC } from "npm:@trpc/server";\n\n// tRPC router\nconst t = initTRPC.context<RequestEvent>().create();\nconst proc = t.procedure;\nconst router = t.router;\n\ninterface User {\n  id: number;\n  name: string;\n}\n\nconst userList: User[] = [\n  {\n    id: 1,\n    name: "John",\n  },\n];\n\nconst appRouter = router({\n  userById: proc\n    .input((val: unknown) => {\n      if (typeof val === "number") return val;\n      throw new Error(`Invalid input: ${typeof val}`);\n    })\n    .query(({ input }) => {\n      const user = userList.find((it) => it.id === input);\n      return user;\n    }),\n});\n\n// share type to client\nexport type AppRouter = typeof appRouter;\n\nconst app = nhttp();\n\n// add adapter to middleware\napp.use("/trpc", adapter({ router: appRouter }));\n\napp.listen(8000, (_err, info) => {\n  console.log(`Running on port ${info.port}`);\n});\n')),(0,p.kt)("p",null,"More info about tRPC => ",(0,p.kt)("a",{parentName:"p",href:"https://trpc.io"},"https://trpc.io")))}d.isMDXComponent=!0}}]);