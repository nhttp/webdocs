"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[15],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(n),m=o,f=s["".concat(l,".").concat(m)]||s[m]||d[m]||a;return n?r.createElement(f,p(p({ref:t},u),{},{components:n})):r.createElement(f,p({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[s]="string"==typeof e?e:o,p[1]=i;for(var c=2;c<a;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(4137));const a={},p="tRPC",i={unversionedId:"3rd-party-lib/tRPC",id:"3rd-party-lib/tRPC",title:"tRPC",description:"Simple adapter tRPC for nhttp.",source:"@site/docs/3rd-party-lib/tRPC.md",sourceDirName:"3rd-party-lib",slug:"/3rd-party-lib/tRPC",permalink:"/docs/3rd-party-lib/tRPC",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/3rd-party-lib/tRPC.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Swagger",permalink:"/docs/3rd-party-lib/swagger"},next:{title:"Zod Validator",permalink:"/docs/3rd-party-lib/zod-validator"}},l={},c=[{value:"Import",id:"import",level:3},{value:"Deno",id:"deno",level:4},{value:"Deno npm",id:"deno-npm",level:4},{value:"Node / Bun",id:"node--bun",level:4},{value:"Usage",id:"usage",level:3}],u={toc:c},s="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"trpc"},"tRPC"),(0,o.kt)("p",null,"Simple adapter tRPC for nhttp."),(0,o.kt)("h3",{id:"import"},"Import"),(0,o.kt)("h4",{id:"deno"},"Deno"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "https://deno.land/x/nhttp@1.2.8/lib/trpc.ts";\n')),(0,o.kt)("h4",{id:"deno-npm"},"Deno npm"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "npm:nhttp-land@1.2.8/trpc";\n')),(0,o.kt)("h4",{id:"node--bun"},"Node / Bun"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @trpc/server\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "nhttp-land/trpc";\n// or\n// const {...} = require("nhttp-land/trpc");\n')),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp, { RequestEvent } from "https://deno.land/x/nhttp@1.2.8/mod.ts";\nimport adapter from "https://deno.land/x/nhttp@1.2.8/lib/trpc.ts";\nimport { initTRPC } from "npm:@trpc/server";\n\n// tRPC router\nconst t = initTRPC.context<RequestEvent>().create();\nconst proc = t.procedure;\nconst router = t.router;\n\ninterface User {\n  id: number;\n  name: string;\n}\n\nconst userList: User[] = [\n  {\n    id: 1,\n    name: "John",\n  },\n];\n\nconst appRouter = router({\n  userById: proc\n    .input((val: unknown) => {\n      if (typeof val === "number") return val;\n      throw new Error(`Invalid input: ${typeof val}`);\n    })\n    .query(({ input }) => {\n      const user = userList.find((it) => it.id === input);\n      return user;\n    }),\n});\n\n// share type to client\nexport type AppRouter = typeof appRouter;\n\nconst app = nhttp();\n\n// add adapter to middleware\napp.use("/trpc", adapter({ router: appRouter }));\n\napp.listen(8000, (_err, info) => {\n  console.log(`Running on port ${info.port}`);\n});\n')),(0,o.kt)("p",null,"More info about tRPC => ",(0,o.kt)("a",{parentName:"p",href:"https://trpc.io"},"https://trpc.io")))}d.isMDXComponent=!0}}]);