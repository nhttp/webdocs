"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[1476],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,f=c["".concat(d,".").concat(m)]||c[m]||u[m]||a;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},l="Zod Validator",i={unversionedId:"3rd-party-lib/zod-validator",id:"3rd-party-lib/zod-validator",title:"Zod Validator",description:"Validate body with zod.",source:"@site/docs/3rd-party-lib/zod-validator.md",sourceDirName:"3rd-party-lib",slug:"/3rd-party-lib/zod-validator",permalink:"/docs/3rd-party-lib/zod-validator",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/3rd-party-lib/zod-validator.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"tRPC",permalink:"/docs/3rd-party-lib/tRPC"}},d={},p=[{value:"Import",id:"import",level:3},{value:"Deno",id:"deno",level:4},{value:"Deno npm",id:"deno-npm",level:4},{value:"Node / Bun",id:"node--bun",level:4},{value:"Usage",id:"usage",level:3},{value:"With Routing Controller",id:"with-routing-controller",level:3}],s={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zod-validator"},"Zod Validator"),(0,o.kt)("p",null,"Validate body with zod."),(0,o.kt)("h3",{id:"import"},"Import"),(0,o.kt)("h4",{id:"deno"},"Deno"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "https://deno.land/x/nhttp@1.2.9/lib/zod-validator.ts";\n')),(0,o.kt)("h4",{id:"deno-npm"},"Deno npm"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "npm:nhttp-land@1.2.9/zod-validator";\n')),(0,o.kt)("h4",{id:"node--bun"},"Node / Bun"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i zod\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "nhttp-land/zod-validator";\n// or\n// const {...} = require("nhttp-land/zod-validator");\n')),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "https://deno.land/x/nhttp@1.2.9/mod.ts";\nimport validate, { z } from "https://deno.land/x/nhttp@1.2.9/lib/zod-validator.ts";\n\nconst User = z.object({\n  username: z.string(),\n  password: z.string(),\n  user_info: z.object({\n    name: z.string(),\n    address: z.string(),\n  }),\n});\n\nconst app = nhttp();\n\n// validate support all content-type (json, multipart, raw, urlencoded)\napp.post("/", validate(User), (rev) => {\n  return rev.body.user_info;\n});\n\napp.listen(8000, (_err, info) => {\n  console.log(`Running on port ${info.port}`);\n});\n')),(0,o.kt)("h3",{id:"with-routing-controller"},"With Routing Controller"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Validate, z } from "https://deno.land/x/nhttp@1.2.9/lib/zod-validator.ts";\n\nconst User = z.object({\n  username: z.string(),\n  password: z.string(),\n  user_info: z.object({\n    name: z.string(),\n    address: z.string(),\n  }),\n});\n\n@Controller("/hello")\nclass HelloController {\n\n  @Validate(User)\n  @Post("/")\n  save(rev: RequestEvent) {\n    return "Created";\n  }\n}\n')))}u.isMDXComponent=!0}}]);