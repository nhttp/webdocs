"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[9714],{4137:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),i=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=i(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=i(t),m=o,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(h,s(s({ref:n},c),{},{components:t})):r.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:o,s[1]=l;for(var i=2;i<a;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4556:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var r=t(7462),o=(t(7294),t(4137));const a={sidebar_position:3},s="Cheat Sheet",l={unversionedId:"cheatsheet",id:"cheatsheet",title:"Cheat Sheet",description:"Return Directly",source:"@site/docs/cheatsheet.md",sourceDirName:".",slug:"/cheatsheet",permalink:"/docs/cheatsheet",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/cheatsheet.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Usage",permalink:"/docs/usage/"}},p={},i=[{value:"Return Directly",id:"return-directly",level:3},{value:"Middleware",id:"middleware",level:3},{value:"Header",id:"header",level:3},{value:"Status Code",id:"status-code",level:3},{value:"Template Engine",id:"template-engine",level:3},{value:"Jsx",id:"jsx",level:3},{value:"Upload",id:"upload",level:3},{value:"Routing Controller",id:"routing-controller",level:3}],c={toc:i},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cheat-sheet"},"Cheat Sheet"),(0,o.kt)("h3",{id:"return-directly"},"Return Directly"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\n// send text\napp.get("/text", () => "text");\n\n// send json\napp.get("/json", () => ({ name: "john" }));\n\n// send Response\napp.get("/res", () => new Response("hello"));\n\n// send file\napp.get("/file", ({ response }) => {\n  response.type("css");\n  return Deno.readFile("path/to/file.css");\n\n  // Bun / Nodejs\n  // return fs.readFileSync("path/to/file.css");\n});\n\n// download file\napp.get("/download", ({ response }) => {\n  response.type("css").attachment();\n  return Deno.readFile("path/to/file.css");\n  \n  // Bun / Nodejs\n  // return fs.readFileSync("path/to/file.css");\n});\n')),(0,o.kt)("h3",{id:"middleware"},"Middleware"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\n// global middleware\napp.use((rev, next) => {\n  rev.foo = "foo";\n  return next();\n});\n\n// with path middleware\napp.use(\n  "/hello",\n  async (rev, next) => {\n    const res = await next();\n    const time = res.headers.get("x-res-time");\n    console.log(`${rev.url} - ${time}`);\n  },\n  async (_, next) => {\n    const start = Date.now();\n    const res = await next();\n    const ms = Date.now() - start;\n    res.headers.set("x-res-time", `${ms}ms`);\n  },\n);\n\napp.get(\n  "/", \n  // inline middleware\n  (rev, next) => {\n    rev.bar = "bar";\n    return next();\n  }, \n  ({ foo, bar }) => foo + bar\n);\n\napp.get("/hello", () => "hello");\n')),(0,o.kt)("h3",{id:"header"},"Header"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\napp.get("/", ({ response }) => {\n  // set header\n  response.header("x-powered-by", "nhttp");\n\n  // get header\n  const val = response.header("x-powered-by");\n  console.log(val); /* => nhttp */\n\n  // append\n  response.header().append("x-powered-by", "framework");\n\n  // get all header\n  console.log(response.header().toJSON());\n\n  // delete header\n  response.header().delete("x-powered-by");\n\n  return "hi";\n});\n')),(0,o.kt)("h3",{id:"status-code"},"Status Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\napp.post("/", ({ response }) => {\n  // set status\n  response.status(201); /* Created */\n\n  // get status\n  const current = response.status();\n  console.log(current); /* => 201 */\n\n  return "hi";\n});\n')),(0,o.kt)("h3",{id:"template-engine"},"Template Engine"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import ejs from "npm:ejs";\n\nconst app = nhttp();\n\n// in folder public and .ejs extensions.\napp.engine(ejs.renderFile, { base: "public", ext: "ejs" });\n\napp.get("/", ({ response }) => {\n  response.render("index", { title: "Hello, World" });\n});\n')),(0,o.kt)("h3",{id:"jsx"},"Jsx"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'/** @jsx n */\n/** @jsxFrag n.Fragment */\n\nimport { n, Helmet, renderToHtml, FC } from "https://deno.land/x/nhttp@1.2.8/lib/jsx.ts";\nimport nhttp from "https://deno.land/x/nhttp@1.2.8/mod.ts";\n\nconst Home: FC<{ title: string }> = (props) => {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h1>Home Page</h1>\n    </>\n  );\n};\n\nconst app = nhttp();\n\napp.engine(renderToHtml);\n\napp.get("/", () => <Home title="welcome jsx" />);\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')),(0,o.kt)("h3",{id:"upload"},"Upload"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\n// handle upload multipart/form-data\nconst upload = multipart.upload({ name: "image" });\n\napp.post("/upload", upload, (rev) => {\n  console.log(rev.file);\n  console.log(rev.body);\n  return "success upload file";\n});\n')),(0,o.kt)("h3",{id:"routing-controller"},"Routing Controller"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp, { RequestEvent } from "https://deno.land/x/nhttp@1.2.8/mod.ts";\nimport { Get, Post, Status, Controller } from "https://deno.land/x/nhttp@1.2.8/lib/controller.ts";\n\n@Controller("/hello")\nclass HelloController {\n\n  @Get("/")\n  hello(rev: RequestEvent) {\n    return "Hello, World";\n  }\n\n  @Status(201)\n  @Post("/")\n  save(rev: RequestEvent) {\n    return "Success save";\n  }\n\n}\n\nconst app = nhttp();\n\napp.use("/api/v1", new UserController());\n// or multi controllers\n// app.use("/api/v1", [new UserController(), new HomeController()]);\n\napp.listen(8000);\n')))}u.isMDXComponent=!0}}]);