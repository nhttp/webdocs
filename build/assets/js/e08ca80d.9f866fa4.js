"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[2632],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=s(t),u=l,g=m["".concat(p,".").concat(u)]||m[u]||c[u]||o;return t?r.createElement(g,a(a({ref:n},d),{},{components:t})):r.createElement(g,a({ref:n},d))}));function g(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,a=new Array(o);a[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[m]="string"==typeof e?e:l,a[1]=i;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6602:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(7462),l=(t(7294),t(3905));const o={},a="Jsx",i={unversionedId:"3rd-party-lib/jsx",id:"3rd-party-lib/jsx",title:"Jsx",description:"Simple jsx libs.",source:"@site/docs/3rd-party-lib/jsx.md",sourceDirName:"3rd-party-lib",slug:"/3rd-party-lib/jsx",permalink:"/docs/3rd-party-lib/jsx",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/3rd-party-lib/jsx.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Etag",permalink:"/docs/3rd-party-lib/etag"},next:{title:"JWT",permalink:"/docs/3rd-party-lib/jwt"}},p={},s=[{value:"Import",id:"import",level:3},{value:"Deno",id:"deno",level:4},{value:"Deno npm",id:"deno-npm",level:4},{value:"Node / Bun",id:"node--bun",level:4},{value:"Config",id:"config",level:3},{value:"Or inline file (tsx)",id:"or-inline-file-tsx",level:3},{value:"Usage",id:"usage",level:3},{value:"Expected in browser",id:"expected-in-browser",level:3},{value:"Using middleware",id:"using-middleware",level:3}],d={toc:s},m="wrapper";function c(e){let{components:n,...t}=e;return(0,l.kt)(m,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"jsx"},"Jsx"),(0,l.kt)("p",null,"Simple jsx libs."),(0,l.kt)("h3",{id:"import"},"Import"),(0,l.kt)("h4",{id:"deno"},"Deno"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "https://deno.land/x/nhttp@1.2.9/lib/jsx.ts";\n')),(0,l.kt)("h4",{id:"deno-npm"},"Deno npm"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "npm:nhttp-land@1.2.9/jsx";\n')),(0,l.kt)("h4",{id:"node--bun"},"Node / Bun"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import {...} from "nhttp-land/jsx";\n// or\n// const {...} = require("nhttp-land/jsx");\n')),(0,l.kt)("h3",{id:"config"},"Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsx": "react",\n  "jsxFactory": "n",\n  "jsxFragmentFactory": "n.Fragment"\n}\n')),(0,l.kt)("h3",{id:"or-inline-file-tsx"},"Or inline file (tsx)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"/** @jsx n */\n/** @jsxFrag n.Fragment */\n")),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'/** @jsx n */\n/** @jsxFrag n.Fragment */\n\nimport { n, Helmet, renderToHtml, FC } from "https://deno.land/x/nhttp@1.2.9/lib/jsx.ts";\nimport nhttp from "https://deno.land/x/nhttp@1.2.9/mod.ts";\n\nconst Home: FC<{ title: string }> = (props) => {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h1>Home Page</h1>\n    </>\n  );\n};\n\nconst app = nhttp();\n\napp.engine(renderToHtml);\n\napp.get("/", () => <Home title="welcome jsx" />);\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')),(0,l.kt)("h3",{id:"expected-in-browser"},"Expected in browser"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>welcome jsx</title>\n  </head>\n  <body>\n    <h1>Home Page</h1>\n  </body>\n</html>\n')),(0,l.kt)("h3",{id:"using-middleware"},"Using middleware"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'/** @jsx n */\n/** @jsxFrag n.Fragment */\n\nimport { n, Helmet, renderToHtml, FC } from "https://deno.land/x/nhttp@1.2.9/lib/jsx.ts";\nimport nhttp from "https://deno.land/x/nhttp@1.2.9/mod.ts";\n\nconst Home: FC<{ title: string }> = (props) => {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h1>Home Page</h1>\n    </>\n  );\n};\n\nconst app = nhttp();\n\napp.use((rev, next) => {\n  rev.jsx = (elem: JSX.Element) => {\n    rev.response.type("text/html; charset=utf-8").send(renderToHtml(elem));\n  }\n  return next();\n});\n\napp.get("/", ({ jsx }) => jsx(<Home title="welcome jsx" />));\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')))}c.isMDXComponent=!0}}]);