(self.webpackChunknhttp_website_docu=self.webpackChunknhttp_website_docu||[]).push([[547],{3905:function(e,r,n){"use strict";n.d(r,{Zo:function(){return d},kt:function(){return f}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),l=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},d=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},c=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=l(n),f=o,m=c["".concat(s,".").concat(f)]||c[f]||u[f]||a;return n?t.createElement(m,i(i({ref:r},d),{},{components:n})):t.createElement(m,i({ref:r},d))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2990:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return d},default:function(){return c}});var t=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],p={sidebar_position:3},s="Middleware",l={unversionedId:"usage/middleware",id:"usage/middleware",isDocsHomePage:!1,title:"Middleware",description:"Middleware is a function to the next handlers.",source:"@site/docs/usage/middleware.md",sourceDirName:"usage",slug:"/usage/middleware",permalink:"/docs/usage/middleware",editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/usage/middleware.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Deploy",permalink:"/docs/usage/deploy"},next:{title:"Router",permalink:"/docs/usage/router"}},d=[{value:"Wrapper for express middleware",id:"wrapper-for-express-middleware",children:[{value:"BeforeWrap",id:"beforewrap",children:[]}]}],u={toc:d};function c(e){var r=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Middleware is a function to the next handlers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { NHttp, Handler } from "https://deno.land/x/nhttp@1.1.5/mod.ts";\n\nconst app = new NHttp();\n\nconst foo: Handler = (rev, next) => {\n    rev.foo = "foo";\n    return next();\n}\n\napp.use(foo);\n\napp.get("/foo", ({ response, foo }) => {\n    return response.send(foo)\n});\n\napp.listen(3000);\n')),(0,a.kt)("h2",{id:"wrapper-for-express-middleware"},"Wrapper for express middleware"),(0,a.kt)("p",null,"Simple wrapper like HOC for middleware (req, res, next);"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: not all middleware can work.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { NHttp, Handler, expressMiddleware, HttpError } from "https://deno.land/x/nhttp@1.1.5/mod.ts";\nimport { body, validationResult } from "https://esm.sh/express-validator";\n\nconst app = new NHttp();\n\n// example express validator\nconst validator: Handler[] = [\n  expressMiddleware([\n    body("username").isString(),\n    body("password").isLength({ min: 6 }),\n    body("email").isEmail(),\n  ]),\n  (rev, next) => {\n    const errors = validationResult(rev);\n    if (!errors.isEmpty()) {\n      throw new HttpError(422, errors.array());\n    }\n    return next();\n  },\n];\n\napp.post("/user", validator, ({ response, body }) => {\n    return response.send(body)\n});\n\napp.listen(3000);\n')),(0,a.kt)("p",null,"expressMiddleware(...middleware: any, { beforeWrap });"),(0,a.kt)("h3",{id:"beforewrap"},"BeforeWrap"),(0,a.kt)("p",null,"Mutate RequestEvent and HttpResponse before wrap middleware. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"...\napp.use(expressMiddleware(\n    [midd1(), midd2()],\n    {\n        beforeWrap: (rev, res) => {\n            // rev.any = fn;\n            // res.any = fn;\n        }\n    }\n))\n...\n")))}c.isMDXComponent=!0}}]);