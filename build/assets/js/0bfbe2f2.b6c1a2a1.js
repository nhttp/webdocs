"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[2273],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=i(r),d=a,f=c["".concat(u,".").concat(d)]||c[d]||m[d]||o;return r?n.createElement(f,p(p({ref:t},l),{},{components:r})):n.createElement(f,p({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:a,p[1]=s;for(var i=2;i<o;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6905:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:7},p="Route Paths",s={unversionedId:"usage/route-paths",id:"usage/route-paths",title:"Route Paths",description:"",source:"@site/docs/usage/route-paths.md",sourceDirName:"usage",slug:"/usage/route-paths",permalink:"/docs/usage/route-paths",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/usage/route-paths.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Cloudflare Workers",permalink:"/docs/usage/cloudflare-workers"},next:{title:"Other Runtime",permalink:"/docs/usage/runtime"}},u={},i=[],l={toc:i},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"route-paths"},"Route Paths"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'...\n\nconst app = nhttp();\n\n// normal path\napp.get("/", () => {...});\n\n// with parameter\napp.get("/users/:userId/books/:bookId", (rev) => {\n  return rev.params;\n});\n\n// with query. /users?name=john&foo[bar]=baz\napp.get("/users", (rev) => {\n  return rev.query;\n});\n\n// with optional parameter. match for /books and /books/bookname \napp.get("/books/:name?", (rev) => {\n  return rev.params;\n});\n\n// with extension. match for .png and .jpg only\napp.get("/image/:filename.(png|jpg)", (rev) => {\n  return rev.params;\n});\n\n// exact/wild. /users/123\napp.any("*", (rev) => {\n  return rev.params;\n  // => { wild: ["users", "123"] }\n});\n\n// exact/wild named slug. /users/123\napp.any("/:slug*", (rev) => {\n  return rev.params;\n  // => { slug: ["users", "123"] }\n});\n\n\n// RegExp. match for path includes hello.\napp.get(/hello/, (rev) => {\n  return rev.path;\n});\n\n// RegExp. match for path endsWith ball. ex: /dragonball or /football\napp.get(/.*ball$/, (rev) => {\n  return rev.path;\n});\n\n...\n')))}m.isMDXComponent=!0}}]);