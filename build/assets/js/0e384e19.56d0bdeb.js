"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[9671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},d=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=i(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,p(p({ref:t},d),{},{components:n})):a.createElement(h,p({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,p=new Array(o);p[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,p[1]=l;for(var i=2;i<o;i++)p[i]=n[i];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},p="Intro",l={unversionedId:"intro",id:"intro",title:"Intro",description:"nhttp ci",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/docs/installation"}},s={},i=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"deno.land",id:"denoland",level:3},{value:"deno-npm",id:"deno-npm",level:3},{value:"nest.land",id:"nestland",level:3},{value:"npm/yarn",id:"npmyarn",level:3},{value:"Usage",id:"usage",level:2},{value:"Run",id:"run",level:2},{value:"Middleware",id:"middleware",level:2},{value:"Body Parser",id:"body-parser",level:2},{value:"Other Runtime (Node / Bun)",id:"other-runtime-node--bun",level:2},{value:"Coudflare Workers",id:"coudflare-workers",level:3},{value:"tsconfig (Bun / Node)",id:"tsconfig-bun--node",level:2},{value:"Jsx",id:"jsx",level:2},{value:"License",id:"license",level:2}],d={toc:i},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"intro"},"Intro"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nhttp/nhttp"},(0,r.kt)("img",{parentName:"a",src:"https://github.com/nhttp/nhttp/workflows/ci/badge.svg",alt:"nhttp ci"})),"\n",(0,r.kt)("a",{parentName:"p",href:"http://badges.mit-license.org"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/:license-mit-blue.svg",alt:"License"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://deno.land/x/nhttp"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/endpoint?url=https%3A%2F%2Fdeno-visualizer.danopia.net%2Fshields%2Flatest-version%2Fx%2Fnhttp@1.2.13%2Fmod.ts",alt:"deno.land"})),"\n",(0,r.kt)("a",{parentName:"p",href:"http://makeapullrequest.com"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/PRs-welcome-blue.svg",alt:"PRs Welcome"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/endpoint?url=https%3A%2F%2Fdeno-visualizer.danopia.net%2Fshields%2Fdep-count%2Fhttps%2Fdeno.land%2Fx%2Fnhttp%2Fmod.ts",alt:"deps badge"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/endpoint?url=https%3A%2F%2Fdeno-visualizer.danopia.net%2Fshields%2Fcache-size%2Fhttps%2Fdeno.land%2Fx%2Fnhttp%2Fmod.ts",alt:"cache badge"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://codecov.io/gh/nhttp/nhttp"},(0,r.kt)("img",{parentName:"a",src:"https://codecov.io/gh/nhttp/nhttp/branch/master/graph/badge.svg?token=SJ2NZQ0ZJG",alt:"codecov"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.codefactor.io/repository/github/nhttp/nhttp/overview/master"},(0,r.kt)("img",{parentName:"a",src:"https://www.codefactor.io/repository/github/nhttp/nhttp/badge/master",alt:"CodeFactor"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://nest.land/package/nhttp"},(0,r.kt)("img",{parentName:"a",src:"https://nest.land/badge.svg",alt:"nest.land"}))),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Focus on simple and easy to use."),(0,r.kt)("li",{parentName:"ul"},"Fast performance."),(0,r.kt)("li",{parentName:"ul"},"Cross runtime support (Deno, Node, Bun, etc)."),(0,r.kt)("li",{parentName:"ul"},"Low overhead & True handlers (no caching anything)."),(0,r.kt)("li",{parentName:"ul"},"Middleware support."),(0,r.kt)("li",{parentName:"ul"},"Sub router support."),(0,r.kt)("li",{parentName:"ul"},"Template engine support (jsx, ejs, nunjucks, eta, pug, ..etc)."),(0,r.kt)("li",{parentName:"ul"},"Return directly on handlers."),(0,r.kt)("li",{parentName:"ul"},"Auto parses the body (",(0,r.kt)("inlineCode",{parentName:"li"},"json / urlencoded / multipart / raw"),").")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nhttp/nhttp/tree/master/examples"},"See Examples")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"denoland"},"deno.land"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "https://deno.land/x/nhttp@1.2.13/mod.ts";\n')),(0,r.kt)("h3",{id:"deno-npm"},"deno-npm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "npm:nhttp-land@1.2.13";\n')),(0,r.kt)("h3",{id:"nestland"},"nest.land"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "https://x.nest.land/nhttp@1.2.13/mod.ts";\n')),(0,r.kt)("h3",{id:"npmyarn"},"npm/yarn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm i nhttp-land\n\n// or\n\nyarn add nhttp-land\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// module\nimport nhttp from "nhttp-land";\n\n// commonjs\nconst nhttp = require("nhttp-land").default;\n')),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "https://deno.land/x/nhttp@1.2.13/mod.ts";\n\nconst app = nhttp();\n\napp.get("/", () => {\n  return "Hello, World";\n});\n\napp.get("/cat", () => {\n  return { name: "cat" };\n});\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return direcly supported =>\n",(0,r.kt)("inlineCode",{parentName:"p"},"Response | String | JSON | Number | ReadableStream | Uint8Array | Blob | null"))),(0,r.kt)("p",null,"Return directly support promise (async/await)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'app.get("/cat", async () => {\n  return await Promise.resolve(new Blob(["cat"], { type: "text/plain" }));\n});\n')),(0,r.kt)("h2",{id:"run"},"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"deno run -A myapp.ts\n")),(0,r.kt)("h2",{id:"middleware"},"Middleware"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\napp.use((rev, next) => {\n  rev.foo = "bar";\n  return next();\n});\n\napp.get("/", ({ foo }) => foo);\n')),(0,r.kt)("h2",{id:"body-parser"},"Body Parser"),(0,r.kt)("p",null,"Support ",(0,r.kt)("inlineCode",{parentName:"p"},"json / urlencoded / multipart / raw"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"note: nhttp automatically parses the body.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const app = nhttp();\n\n// if you want disable bodyParser\n// const app = nhttp({ bodyParser: false });\n\napp.post("/save", (rev) => {\n  console.log(rev.body);\n  return "success save";\n});\n\n// inline bodyParser\n// app.post("/save", bodyParser(), (rev) => {...});\n')),(0,r.kt)("h2",{id:"other-runtime-node--bun"},"Other Runtime (Node / Bun)"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"for nodejs, requires v18.0.0 or higher. cause it uses\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"},"Fetch API"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "nhttp-land";\n\nconst app = nhttp();\n\napp.get("/", () => new Response("hello"));\n\napp.get("/hello", () => "Hello, World");\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')),(0,r.kt)("h3",{id:"coudflare-workers"},"Coudflare Workers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import nhttp from "nhttp-land";\n\nconst app = nhttp();\n\napp.get("/hello", () => "Hello, World");\n\nexport default app.module();\n\n// for other just invoke app.handle\n// export default app.handle;\n')),(0,r.kt)("h2",{id:"tsconfig-bun--node"},"tsconfig (Bun / Node)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    // if bun\n    // "types": ["bun-types"],\n    "lib": [\n      "DOM",\n      "DOM.Iterable",\n      "ESNext"\n    ]\n  }\n}\n')),(0,r.kt)("h2",{id:"jsx"},"Jsx"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'/** @jsx n */\n/** @jsxFrag n.Fragment */\n\nimport { n, Helmet, renderToHtml, FC } from "https://deno.land/x/nhttp@1.2.13/lib/jsx.ts";\nimport nhttp from "https://deno.land/x/nhttp@1.2.13/mod.ts";\n\nconst Home: FC<{ title: string }> = (props) => {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h1>Home Page</h1>\n    </>\n  );\n};\n\nconst app = nhttp();\n\napp.engine(renderToHtml);\n\napp.get("/", () => <Home title="welcome jsx" />);\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')),(0,r.kt)("h2",{id:"license"},"License"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nhttp/nhttp/blob/master/LICENSE"},"MIT")))}c.isMDXComponent=!0}}]);