"use strict";(self.webpackChunknhttp_webdoc=self.webpackChunknhttp_webdoc||[]).push([[3218],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),v=o,m=u["".concat(p,".").concat(v)]||u[v]||d[v]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=v;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},5897:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(4137));const a={sidebar_position:1},i="rev",s={unversionedId:"request-event/request-event",id:"request-event/request-event",title:"rev",description:"rev as RequestEvent. related to Deno.RequestEvent or",source:"@site/docs/request-event/request-event.md",sourceDirName:"request-event",slug:"/request-event/",permalink:"/docs/request-event/",draft:!1,editUrl:"https://github.com/nhttp/webdocs/edit/master/docs/request-event/request-event.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"app.use",permalink:"/docs/application/use"},next:{title:"rev.body",permalink:"/docs/request-event/body"}},p={},l=[{value:"Example Code",id:"example-code",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rev"},"rev"),(0,o.kt)("p",null,"rev as ",(0,o.kt)("inlineCode",{parentName:"p"},"RequestEvent"),". related to ",(0,o.kt)("inlineCode",{parentName:"p"},"Deno.RequestEvent")," or\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent"},"FetchEvent")," Web API. This\nis the event type for request events dispatched on the server. It\ncontains information about the server routers, including the request and how the\nreceiver will treat the response. It provides the ",(0,o.kt)("inlineCode",{parentName:"p"},"rev.respondWith"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"rev.send"),"\nand more method, which allows us to provide a response to this."),(0,o.kt)("h3",{id:"example-code"},"Example Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import nhttp from "https://deno.land/x/nhttp@1.2.9/mod.ts";\n\nconst app = nhttp();\n\napp.get("/", (rev) => {\n  rev.respondWith(new Response("Hello, World !"));\n});\n\napp.listen(8000, () => {\n  console.log("> Running on port 8000");\n});\n')))}d.isMDXComponent=!0}}]);